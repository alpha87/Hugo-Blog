<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 简讯</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on 简讯</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>2016-2020 Jianxun. | 岁月无婷无华✨</copyright>
    <lastBuildDate>Wed, 08 May 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用三种语言实现斐波那契数列</title>
      <link>/2019/05/08/%E4%BD%BF%E7%94%A8%E4%B8%89%E7%A7%8D%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/05/08/%E4%BD%BF%E7%94%A8%E4%B8%89%E7%A7%8D%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</guid>
      <description>&lt;p&gt;使用 &lt;code&gt;Python&lt;/code&gt;，&lt;code&gt;Lua&lt;/code&gt; 和 &lt;code&gt;JavaScript&lt;/code&gt; 实现斐波那契数列。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Python和大漠插件进行文字识别</title>
      <link>/2019/03/12/%E4%BD%BF%E7%94%A8python%E5%92%8C%E5%A4%A7%E6%BC%A0%E6%8F%92%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/12/%E4%BD%BF%E7%94%A8python%E5%92%8C%E5%A4%A7%E6%BC%A0%E6%8F%92%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB/</guid>
      <description>&lt;p&gt;这是有关使用大漠插件的第一篇，之后还会有很多篇，用来介绍大漠插件的使用，和python的结合，到最终实现一个游戏脚本集合（目标）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;家里有一台win7系统的电脑，平时可以用来玩玩游戏消磨时间。但是有时候有一些重复的操作实在是无趣，所以打算写个脚本，让其自动化执行。&lt;/p&gt;
&lt;p&gt;最终的目标就是把游戏里一些常用的操作都集合到脚本中去，且无序随机执行，模拟真人操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>桶排序</title>
      <link>/2019/02/01/%E6%A1%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/01/%E6%A1%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;h2 id=&#34;简单介绍&#34;&gt;简单介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%A1%B6%E6%8E%92%E5%BA%8F&#34;target=&#34;_blank&#34;&gt;来自维基百科&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;桶排序（Bucket sort）或所谓的箱排序，是一个排序演算法，工作的原理是将阵列分到有限数量的桶里。每个桶再个别排序（有可能再使用别的排序演算法或是以递回方式继续使用桶排序进行排序）。桶排序是鸽巢排序的一种归纳结果。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>选择排序</title>
      <link>/2019/01/25/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/25/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;h2 id=&#34;简单介绍&#34;&gt;简单介绍&lt;/h2&gt;
&lt;p&gt;以下介绍来自&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F&#34;target=&#34;_blank&#34;&gt;维基百科&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>归并排序</title>
      <link>/2019/01/15/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/15/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;h2 id=&#34;简单介绍&#34;&gt;简单介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;归并排序（英语：Merge sort，或mergesort），是建立在归并操作上的一种有效的排序算法，效率為 {\displaystyle O(n\log n)} {\displaystyle O(n\log n)}（大O符号）。1945年由约翰·冯·诺伊曼首次提出。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用，且各层分治递归可以同时进行。&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F&#34;target=&#34;_blank&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Readfree 签到脚本</title>
      <link>/2019/01/14/readfree-%E7%AD%BE%E5%88%B0%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/14/readfree-%E7%AD%BE%E5%88%B0%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://readfree.me/&#34;target=&#34;_blank&#34;&gt;readfree&lt;/a&gt;是一个电子书分享网站, 不过下载电子书需要通过签到来获取额度.每天签到的事情可以交给定时脚本完成.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>冒泡排序</title>
      <link>/2018/12/25/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/12/25/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;h1 id=&#34;简单介绍&#34;&gt;简单介绍&lt;/h1&gt;
&lt;p&gt;以下介绍来自&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F&#34;target=&#34;_blank&#34;&gt;维基百科&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;冒泡排序（英语：Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢「浮」到数列的顶端。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Scrapy学习笔记（六）</title>
      <link>/2017/07/15/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%85%AD/</link>
      <pubDate>Sat, 15 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/15/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%85%AD/</guid>
      <description>&lt;p&gt;本文是介绍Scrapy基础用法的最后一篇，介绍Scrapy中Download Middleware的用法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scrapy学习笔记（五）</title>
      <link>/2017/07/12/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%94/</link>
      <pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/12/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%94/</guid>
      <description>&lt;p&gt;本篇介绍scrapy的item pipeline，具体操作要根据爬取的内容决定。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scrapy学习笔记（四）</title>
      <link>/2017/07/08/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9B/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/08/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9B/</guid>
      <description>&lt;p&gt;学习scrapy中spider的用法，主要介绍一些方法的使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scrapy学习笔记（三）</title>
      <link>/2017/06/25/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/25/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/</guid>
      <description>&lt;p&gt;我们来聊聊scrapy中选择器的用法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scrapy学习笔记（二）</title>
      <link>/2017/06/22/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/22/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/</guid>
      <description>&lt;p&gt;通过这篇文章，我们会了解scrapy的命令行工具。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scrapy学习笔记（一）</title>
      <link>/2017/06/20/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/20/scrapy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</guid>
      <description>&lt;p&gt;作为scrapy学习笔记的第一篇，主要是了解此框架的基本使用。并通过一个demo感受scrapy框架的强大。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BeautifulSoup4 文档学习记录</title>
      <link>/2017/01/19/beautifulsoup4-%E6%96%87%E6%A1%A3%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/01/19/beautifulsoup4-%E6%96%87%E6%A1%A3%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
      <description>花了点时间阅读了 Beautiful Soup 的官方文档。说实话，之前看到这些东西就头疼，密密麻麻全是字，真是不想看，不过没办法，东西总是要学习的，哪能说不看就不看呢</description>
    </item>
    
  </channel>
</rss>